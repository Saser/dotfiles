# PLUGINS

set -g @plugin 'tmux-plugins/tpm'
set -g @plugin 'seebi/tmux-colors-solarized'

# VISUALS

set -g @colors-solarized 'dark'

# SETTINGS

# Change prefix from Ctrl-b to Ctrl-Space.
# Since C-b is no longer the prefix, C-b C-b should no longer `send-prefix`.
unbind-key -T prefix C-b
# Globally set the `prefix` option to `C-Space`, effectively making Ctrl-Space the prefix.
set-option -g prefix C-Space
# Pressing C-Space C-Space should now send the prefix.
bind-key -T prefix C-Space send-prefix

# These options seem to be needed to enable correct cursor shape in neovim.
# Refer to `:CheckHealth` in neovim, and the neovim FAQ.
set-option -g -a terminal-overrides ',*:Ss=\E[%p1%d q:Se=\E[2 q'
set-option -g default-terminal "screen-256color"

# Remove the delay from pressing escape.
# (It is really annoying when using (neo)vim in the terminal, which I usually do.
set-option -g escape-time 0

# Increase the history limit a bit.
set-option -g history-limit 100000

# Enable mouse support. This is mostly so that I can use the mouse to scroll in and click between
# panes.
set-option -g mouse on

# KEYMAPS

# Reload this configuration file.
bind-key -T prefix r source-file "$HOME/.tmux.conf"

# Use vim-style keybindings to navigate among panes.
bind-key -r -T prefix C-h select-pane -L
bind-key -r -T prefix C-j select-pane -D
bind-key -r -T prefix C-k select-pane -U
bind-key -r -T prefix C-l select-pane -R

# Use Vimium-style keybindings to navigate among windows.
bind-key -r -T prefix J previous-window
bind-key -r -T prefix K next-window

# Splits the window, creating a new pane with the same path as the split pane.
bind-key -T prefix - split-window -c "#{pane_current_path}"
bind-key -T prefix | split-window -h -c "#{pane_current_path}"

# Prompts for a new session and creates a session with the input name.
bind-key -T prefix n command-prompt -p "New session:" "new-session -s '%%'"

# Makes copy-mode-vi behave a bit more like vim does.
# Use `v` to start selection.
unbind-key -T copy-mode-vi Space
bind-key -T copy-mode-vi v send-keys -X begin-selection

# Pressing `y` in copy-mode-vi copies the current selection to the `clipboard` X clipboard, which is
# the one that is accessed by Ctrl-v. Note that the following (un)bindings basically disable tmux:s
# own clipboard, and only uses the X clipboard.
unbind-key -T copy-mode-vi Enter
bind-key -T copy-mode-vi y send-keys -X copy-pipe 'xsel --clipboard --input' \; send-keys -X clear-selection

# Do incremental search. Stolen from the default configuration of incremental search used in `emacs`
# copy-mode. The difference is that the search string is not "stored" between searches, due to the
# exclusion of `-I "#{pane_search_string}"`.
bind-key -T copy-mode-vi / command-prompt -i -p "(search down)" "send -X search-forward-incremental \"%%%\""
bind-key -T copy-mode-vi ? command-prompt -i -p "(search up)" "send -X search-backward-incremental \"%%%\""

# Required by TPM to have this line at the very end of `.tmux.conf`.
run -b '~/.tmux/plugins/tpm/tpm'

# vim: textwidth=100
